#!/usr/bin/env bash
set -e -o pipefail -u

# For local use, you'll need to set these outside this script:
# - BUILDKITE_ANALYTICS_TOKEN
# - BUILDKITE_TEST_ENGINE_API_ACCESS_TOKEN

timestamp=$(date -u +%Y%m%d%H%M%S)

export BUILDKITE_ANALYTICS_BRANCH=${BUILDKITE_ANALYTICS_BRANCH:-$(git branch --show-current)}
export BUILDKITE_ANALYTICS_ENDPOINT=${BUILDKITE_ANALYTICS_ENDPOINT:-"http://analytics-api.buildkite.localhost:3000/v1/uploads"}
export BUILDKITE_ANALYTICS_BASE_URL=${BUILDKITE_ANALYTICS_BASE_URL:-"http://analytics-api.buildkite.localhost:3000/v1/uploads"}
export BUILDKITE_ANALYTICS_KEY=${BUILDKITE_ANALYTICS_KEY:-"local-$timestamp"}
export BUILDKITE_ANALYTICS_MESSAGE=${BUILDKITE_ANALYTICS_MESSAGE:-$(git log --max-count=1 --format=%s)}
export BUILDKITE_ANALYTICS_NUMBER=${BUILDKITE_ANALYTICS_NUMBER:-$timestamp}
export BUILDKITE_ANALYTICS_SHA=${BUILDKITE_ANALYTICS_SHA:-$(git rev-parse HEAD)}
export BUILDKITE_ANALYTICS_URL=${BUILDKITE_ANALYTICS_URL:-"http://buildkite.localhost/builds#$timestamp"}
export BUILDKITE_BUILD_ID=${BUILDKITE_BUILD_ID:-$timestamp}
export BUILDKITE_ORGANIZATION_SLUG=${BUILDKITE_ORGANIZATION_SLUG:-"buildkite"}
export BUILDKITE_TEST_ENGINE_API_ACCESS_TOKEN=${BUILDKITE_TEST_ENGINE_API_ACCESS_TOKEN:-test}
export BUILDKITE_TEST_ENGINE_BASE_URL=${BUILDKITE_TEST_ENGINE_BASE_URL:-"http://api.buildkite.localhost:3000"}
export BUILDKITE_TEST_ENGINE_SUITE_SLUG=${BUILDKITE_TEST_ENGINE_SUITE_SLUG:-"test-engine-client-examples"}

docker_env=(
  -e BUILDKITE_ANALYTICS_BASE_URL
  -e BUILDKITE_ANALYTICS_BRANCH
  -e BUILDKITE_ANALYTICS_ENDPOINT
  -e BUILDKITE_ANALYTICS_KEY
  -e BUILDKITE_ANALYTICS_MESSAGE
  -e BUILDKITE_ANALYTICS_NUMBER
  -e BUILDKITE_ANALYTICS_SHA
  -e BUILDKITE_ANALYTICS_TOKEN
  -e BUILDKITE_ANALYTICS_URL
  -e BUILDKITE_BUILD_ID
  -e BUILDKITE_ORGANIZATION_SLUG
  -e BUILDKITE_TEST_ENGINE_API_ACCESS_TOKEN
  -e BUILDKITE_TEST_ENGINE_BASE_URL
  -e BUILDKITE_TEST_ENGINE_DEBUG_ENABLED=true
  -e BUILDKITE_TEST_ENGINE_SUITE_SLUG
)

main() {
  minitest
  rspec
  jest
  cypress
  playwright
}

minitest() {
  echo "+++ Minitest"
  docker run --rm \
    --net host \
    -v "$(pwd):$(pwd)" -w "$(pwd)/ruby-minitest" \
    "${docker_env[@]}" \
    ruby:3.4-slim \
    bin/test || true
}

rspec() {
  echo "+++ RSpec"
  for p in 0 1; do
    docker run --rm \
      --net host \
      -v "$(pwd):$(pwd)" -w "$(pwd)/rspec" \
      "${docker_env[@]}" \
      -e BUILDKITE_PARALLEL_JOB=$p \
      -e BUILDKITE_PARALLEL_JOB_COUNT=2 \
      -e BUILDKITE_STEP_ID="rspec-$timestamp" \
      ruby:3.4-bookworm \
      bin/test || true
  done
}

jest() {
  echo "+++ Jest"
  for p in 0 1; do
    docker run --rm \
      --net host \
      -v "$(pwd):$(pwd)" -w "$(pwd)/jest" \
      "${docker_env[@]}" \
      -e BUILDKITE_PARALLEL_JOB=$p \
      -e BUILDKITE_PARALLEL_JOB_COUNT=2 \
      -e BUILDKITE_STEP_ID="jest-$timestamp" \
      node:23.1.0-bookworm \
      bin/test || true
  done
}

cypress() {
  echo "+++ Cypress"
  for p in 0 1; do
    docker run --rm \
      --net host \
      -v "$(pwd):$(pwd)" -w "$(pwd)/cypress" \
      "${docker_env[@]}" \
      -e BUILDKITE_PARALLEL_JOB=$p \
      -e BUILDKITE_PARALLEL_JOB_COUNT=2 \
      -e BUILDKITE_STEP_ID="cypress-$timestamp" \
      cypress/included:13.15.1 \
      bin/test || true
  done
}

playwright() {
  echo "+++ Playwright"
  for p in 0 1; do
    docker run --rm \
      --net host \
      -v "$(pwd):$(pwd)" -w "$(pwd)/playwright" \
      "${docker_env[@]}" \
      -e BUILDKITE_PARALLEL_JOB=$p \
      -e BUILDKITE_PARALLEL_JOB_COUNT=2 \
      -e BUILDKITE_STEP_ID="playwright-$timestamp" \
      mcr.microsoft.com/playwright:v1.48.1-noble \
      bin/test || true
  done
}

main
